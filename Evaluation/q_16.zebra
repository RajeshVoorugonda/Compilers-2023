@ Author: Sriman
func int partition(array(int) arr, int l, int r){
    var int val = arr[r];
    var int i = l;
    for (var int j = l; j <= r - 1; j = j + 1){
        if (arr[j] <= val){
            var int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
            i = i + 1;
        }
    }
    arr[r] = arr[i];
    arr[i] = val;
    return i;
}

func float median(array(int) a){
    var int n = length(a);
    var int l = 0;
    var int r = length(a) - 1;
    if (n%2==0){
        var int x = -1;
        var int y = -1;
        while ((x == -1) || (y == -1)){
            var int p = partition(a, l, r);
            if (p == n//2){
                y = a[p];
                r = p - 1;
            }
            else if(p == n//2 - 1){
                x = a[p];
                l = p + 1;
            }
            else if (p < n//2 - 1){
                l = p+1;
            }
            else if (p > n//2){
                r = p-1;
            }
        }
        return (x + y)/2;
    }
    else{
        var int x = -1;
        while(x == -1){
            var int p = partition(a, l, r);
            if (p == n//2){
                x = a[p];
            }
            else if (p > n//2){
                r = p-1;
            }
            else{
                l = p + 1;
            }
        }
        return x/1;
    }
}

var array(int) a = array(int){1,2,3,4};
zout(median(a));
zout(median(array(int){1,2,3}));